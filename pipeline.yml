#resources
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: pks
  type: pivnet
  source:
    api_token: ((pivnet_api_token))
    product_slug: pivotal-container-service
    product_version: 1.7.0
    sort_by: semver
- name: pipeline-repo
  type: git
  source:
    uri: ((github_repo.uri))
    branch: master

# - name: tf-state
#   type: terraform
#   source:
#     backend_type: s3
#     backend_config:
#       workspace_key_prefix: ((pks.env_name))
#       bucket: ((s3.buckets.terraform))
#       region: us-east-1
#       access_key: ((s3.buckets.access_key))
#       secret_key: ((s3.buckets.secret_key))
#     vars:


jobs:

#create pks cluster 
- name: create-cluster
  public: false
  plan:
  - in_parallel:
    - get: pipeline-repo 
    - get: pks
      params:
        globs:
        - pks-linux*
  - task: create-cluster
    file: pipeline-repo/tasks/create-cluster/create-cluster.yml
    params:
      CLUSTER_NAME: ((pks.cluster_name))
      CLUSTER_HOSTNAME: ((pks.cluster_name)).((pks.dns_suffix))
      PKS_PLAN: ((pks.plan))
      PKS_PASSWORD: ((pks.password))
      PKS_USERNAME: ((pks.username))
      PKS_API: ((pks.api))



#create master load balancer 
- name: create-master-vip
  public: false
  plan:
  - in_parallel:
    - get: pipeline-repo 
      passed:
      - create-cluster
      trigger: true
    - get: pks
      params:
        globs:
        - pks-linux*
  - task: get-master-ips
    file: pipeline-repo/tasks/get-master-ips/get-master-ips.yml
    params:
      CLUSTER_NAME: ((pks.cluster_name))
      PKS_PASSWORD: ((pks.password))
      PKS_USERNAME: ((pks.username))
      PKS_API: ((pks.api))
  # - put: tf-state
  #   params:
  #   # env:
  #   #   TF_LOG: DEBUG
  #     env_name: citrix
  #     terraform_source: pipeline-repo/citrix
  #     delete_on_failure: false
  #     var_files:
  #     - 


#add lb dns

#deploy netscaler crds

#deploy traefik

#create dns entry for ingress